{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","getReorderedGoods","goods","sortType","isReversed","visibleGoods","sort","a","b","ALPABET","localeCompare","LENGTH","length","reverse","App","state","NONE","this","className","type","classNames","onClick","setState","prevState","map","product","Component","ReactDOM","render","document","getElementById"],"mappings":"iKAkBKA,E,+FAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAeK,SAASC,EACdC,EADK,GAGJ,IADCC,EACF,EADEA,SAAUC,EACZ,EADYA,WAGNC,EAAY,YAAOH,GAmBzB,OAfAG,EAAaC,MAAK,SAACC,EAAWC,GAC5B,OAAQL,GACN,KAAKJ,EAASU,QACZ,OAAOF,EAAEG,cAAcF,GACzB,KAAKT,EAASY,OACZ,OAAOJ,EAAEK,OAASJ,EAAEI,OACtB,QACE,OAAO,MAITR,GACFC,EAAaQ,UAGRR,G,SApCJN,O,eAAAA,I,qBAAAA,I,oBAAAA,M,KA4CE,IAAMe,EAAb,4MACEC,MAAQ,CACNX,YAAY,EACZD,SAAUJ,EAASiB,MAHvB,4CAME,WAA2B,IAAD,OACxB,EAAiCC,KAAKF,MAA9BX,EAAR,EAAQA,WAAYD,EAApB,EAAoBA,SAEpB,OACE,sBAAKe,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IACT,iBACA,CAAE,WAAYjB,IAAaJ,EAASU,UAEtCY,QAAS,WACP,EAAKC,SACH,CAAEnB,SAAUJ,EAASU,WAR3B,iCAeA,wBACEU,KAAK,SACLD,UAAWE,IACT,oBACA,CAAE,WAAYjB,IAAaJ,EAASY,SAEtCU,QAAS,WACP,EAAKC,SACH,CAAEnB,SAAUJ,EAASY,UAR3B,4BAeA,wBACEQ,KAAK,SACLD,UAAWE,IACT,oBACA,CAAE,YAAahB,IAEjBiB,QAAS,WACP,EAAKC,UAAS,SAACC,GACb,MAAO,CAAEnB,YAAamB,EAAUnB,gBARtC,sBAgBGA,GAAcD,IAAaJ,EAASiB,OAEjC,wBACEG,KAAK,SACLD,UAAU,4BACVG,QAAS,WACP,EAAKC,SAAS,CACZlB,YAAY,EACZD,SAAUJ,EAASiB,QANzB,sBAgBR,6BAEIf,EAAkBD,EAAiB,CACjCG,WACAC,eAECoB,KAAI,SAAAC,GAAO,OACV,oBAAI,UAAQ,OAAZ,SAAoBA,gBAnFpC,GAAyBC,aC3DzBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.e0bf692d.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport classNames from 'classnames';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\n// Use this function in the render to prepare goods\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  // To avoid the original array mutation\n  const visibleGoods = [...goods];\n\n  // Sort and reverse goods if needed\n  // eslint-disable-next-line no-console\n  visibleGoods.sort((a: string, b: string) => {\n    switch (sortType) {\n      case SortType.ALPABET:\n        return a.localeCompare(b);\n      case SortType.LENGTH:\n        return a.length - b.length;\n      default:\n        return 0;\n    }\n  });\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n\ntype State = {\n  isReversed: boolean,\n  sortType: SortType,\n};\n\nexport class App extends Component<{}, State> {\n  state = {\n    isReversed: false,\n    sortType: SortType.NONE,\n  };\n\n  render(): React.ReactNode {\n    const { isReversed, sortType } = this.state;\n\n    return (\n      <div className=\"section content\">\n        <div className=\"buttons\">\n          <button\n            type=\"button\"\n            className={classNames(\n              'button is-info',\n              { 'is-light': sortType !== SortType.ALPABET },\n            )}\n            onClick={() => {\n              this.setState(\n                { sortType: SortType.ALPABET },\n              );\n            }}\n          >\n            Sort alphabetically\n          </button>\n\n          <button\n            type=\"button\"\n            className={classNames(\n              'button is-success',\n              { 'is-light': sortType !== SortType.LENGTH },\n            )}\n            onClick={() => {\n              this.setState(\n                { sortType: SortType.LENGTH },\n              );\n            }}\n          >\n            Sort by length\n          </button>\n\n          <button\n            type=\"button\"\n            className={classNames(\n              'button is-warning',\n              { 'is-light': !isReversed },\n            )}\n            onClick={() => {\n              this.setState((prevState) => {\n                return { isReversed: !prevState.isReversed };\n              });\n            }}\n          >\n            Reverse\n          </button>\n\n          {\n            (isReversed || sortType !== SortType.NONE)\n              && (\n                <button\n                  type=\"button\"\n                  className=\"button is-danger is-light\"\n                  onClick={() => {\n                    this.setState({\n                      isReversed: false,\n                      sortType: SortType.NONE,\n                    });\n                  }}\n                >\n                  Reset\n                </button>\n              )\n          }\n        </div>\n\n        <ul>\n          {\n            getReorderedGoods(goodsFromServer, {\n              sortType,\n              isReversed,\n            })\n              .map(product => (\n                <li data-cy=\"Good\">{product}</li>\n              ))\n          }\n        </ul>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}